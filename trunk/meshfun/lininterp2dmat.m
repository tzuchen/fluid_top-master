function A = lininterp2dmat(x,Y,Z)
% given a set of 2d points and a regular mesh (Y,Z) 
% generated by meshgrid(), this function returns the 
% linear interpolation matrix which maps the points
% on the regular mesh to x. 
% Note: the implicit assumption here is all boundry 
% values are zeros. 
% Note Y,Z can be vectors. (just like in interp2)
%
% Tzu-Chen Liang 11/16/2005


if min([size(Y),size(Z)])==1
     [Y,Z] = meshgrid(Y,Z);
end

[m,n]  = size(Y);
gsizey = Y(1,2)-Y(1,1);
gsizez = Z(2,1)-Z(1,1);
y0     = Y(1,1);
z0     = Z(1,1);
indmat = reshape(1:m*n,m,n);


lengthx = size(x,2);

      y     = x(1,:);
      z     = x(2,:); 
      i     = floor((y-y0)/gsizey)+1;
      j     = floor((z-z0)/gsizez)+1;
      remi  = ((y-y0) - gsizey*(i-1))/gsizey;
      remj  = ((z-z0) - gsizez*(j-1))/gsizez;
      vc    = sparse(4,lengthx);
      [nouse,w] = lininterp2d([remi;remj],vc);  
  
      jind   = reshape([i+(j-1)*m; i+j*m;i+1+(j-1)*m;i+1+j*m],4*lengthx,1);
      posind = find(jind>0); 
      iind   = reshape(ones(4,1)*[1:lengthx],4*lengthx,1); 
      w      = reshape(w,4*lengthx,1); 

A = sparse(iind(posind),jind(posind),w(posind),lengthx,m*n+m+1);
A = A(:,1:m*n);





  
